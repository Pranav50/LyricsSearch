{"version":3,"sources":["components/spin.gif","components/NavBar.js","context.js","components/Spinner.js","components/Track.js","components/Tracks.js","components/Search.js","components/Index.js","components/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","message","body","catch","err","console","log","props","children","Component","Consumer","Spinner","src","spinner","alt","style","width","margin","display","Track","track","artist_name","track_name","album_name","react_router_dom","to","track_id","Tracks","undefined","Fragment","map","item","components_Track","APP_KEY","process","Search","trackTitle","onChange","e","defineProperty","target","name","findTrack","preventDefault","onSubmit","bind","placeholder","mdbreact_esm","color","Index","components_Search","components_Tracks","Lyrics","lyrics","componentDidMount","_callee","regenerator_default","wrap","_context","prev","next","match","params","id","stop","_this$state","keys","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","explicit","dist_default","format","first_release_date","App","context_Provider","components_NavBar","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mQCUzBC,EARA,WACX,OACQC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAhB,4CCAVC,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAOA,EAAOC,MACV,IAAK,gBACL,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,WAAYJ,EAAOK,QACnBC,QAAS,mBAEb,QACI,OAAOP,IAINQ,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAR,OAAAiB,EAAA,EAAAjB,CAAAU,MAAAH,EAAAP,OAAAkB,EAAA,EAAAlB,CAAAK,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAW,OAAAP,MACIjB,MAAQ,CACJK,WAAY,GACZE,QAAS,gBACTkB,SAAU,SAAAxB,GAAM,OAAIU,EAAKe,SAAS,SAAA1B,GAAK,OAAID,EAAQC,EAAOC,OAJlEU,EAAA,OAAAR,OAAAwB,EAAA,EAAAxB,CAAAK,EAAAC,GAAAN,OAAAyB,EAAA,EAAAzB,CAAAK,EAAA,EAAAqB,IAAA,oBAAAC,MAAA,WAOyB,IAAAC,EAAAlB,KAChBmB,IAAMC,IACC,iJAAAT,OA1BA,qCA4BHU,KAAK,SAAAC,GACNJ,EAAKL,SAAS,CAACrB,WAAY8B,EAAIC,KAAKC,QAAQC,KAAKjC,eAEhDkC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAdtC,CAAAX,IAAA,SAAAC,MAAA,WAkBQ,OACItC,EAAAC,EAAAC,cAACE,EAAQY,SAAT,CAAkBsB,MAAOjB,KAAKb,OACzBa,KAAK8B,MAAMC,cApB5BpC,EAAA,CAA8BqC,aA0BjBC,EAAWlD,EAAQkD,0BC3CjBC,EAAA,WACX,OACIvD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OACIsD,IAAKC,IACLC,IAAI,aACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,YAAaC,QAAQ,aCiBvDC,EAvBD,SAACZ,GAAU,IACba,EAAUb,EAAVa,MACR,OACIhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAK8D,EAAMC,aACXjE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACTH,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAArB,SADJ,KAEO6D,EAAME,WACblE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAArB,SAJJ,KAKO6D,EAAMG,YAEbnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMC,GAAE,gBAAArC,OAAmBgC,EAAMM,UAAYnE,UAAU,6BACnDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBADjB,oBCqBLoE,mLA/BP,OACIvE,EAAAC,EAAAC,cAACoD,EAAD,KAEQ,SAAAhB,GAAS,IACGzB,EAAwByB,EAAxBzB,WAAYE,EAAYuB,EAAZvB,QAEpB,YAAkByD,IAAf3D,GAAkD,IAAtBA,EAAWW,OAC/BxB,EAAAC,EAAAC,cAACqD,EAAD,MAIHvD,EAAAC,EAAAC,cAACF,EAAAC,EAAMwE,SAAP,KACIzE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAoBY,GAClCf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEHU,EAAW6D,IAAI,SAAAC,GAAI,OACf3E,EAAAC,EAAAC,cAAC0E,EAAD,CAAOvC,IAAKsC,EAAKX,MAAMM,SAAUN,MAAOW,EAAKX,qBAlB5EX,6BCAfwB,EAAUC,mCA6DDC,6MA1DXvE,MAAQ,CACJwE,WAAY,MAGhBC,SAAW,SAAAC,GACP/D,EAAKe,SAALvB,OAAAwE,EAAA,EAAAxE,CAAA,GAAgBuE,EAAEE,OAAOC,KAAQH,EAAEE,OAAO9C,WAG9CgD,UAAY,SAACrD,EAAUiD,GACnBA,EAAEK,iBAEF/C,IAAMC,IACF,2FAAAT,OAA2Fb,EAAKX,MAAMwE,YAAtG,mDAAAhD,OACmD6C,IACtDnC,KAAK,SAAAC,GACNV,EAAS,CACLvB,KAAM,gBACNI,QAAS6B,EAAIC,KAAKC,QAAQC,KAAKjC,eAIlCkC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,8EAGrB,IAAAT,EAAAlB,KACL,OACIrB,EAAAC,EAAAC,cAACoD,EAAD,KAEY,SAAAhB,GAAS,IACGL,EAAaK,EAAbL,SACR,OACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAwBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAoB,IAAvE,wBAGAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,kBACAH,EAAAC,EAAAC,cAAA,QAAMsF,SAAUjD,EAAK+C,UAAUG,KAAKlD,EAAMN,IACtCjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,OAAOP,UAAU,+BAC7BuF,YAAY,gBACZL,KAAK,aACL/C,MAAOC,EAAK/B,MAAMwE,WAClBC,SAAU1C,EAAK0C,YAEnBjF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQC,MAAM,UAAUzF,UAAU,uBAClCO,KAAK,UADL,+BA7CnB2C,aCMNwC,EATD,WACV,OACI7F,EAAAC,EAAAC,cAACF,EAAAC,EAAMwE,SAAP,KACIzE,EAAAC,EAAAC,cAAC4F,EAAD,MACA9F,EAAAC,EAAAC,cAAC6F,EAAD,kDCFNlB,EAAU,mCA8EDmB,6MA3EXxF,MAAQ,CACJwD,MAAO,GACPiC,OAAQ,MAEZC,uCAAoB,SAAAC,IAAA,OAAAC,EAAAnG,EAAAoG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACVhE,IAAMC,IACR,qGAAAT,OACYb,EAAKgC,MAAMsD,MAAMC,OAAOC,GADpC,YAAA3E,OACiD6C,IACpDnC,KAAK,SAAAC,GAIN,OAFAxB,EAAKe,SAAS,CAAC+D,OAAQtD,EAAIC,KAAKC,QAAQC,KAAKmD,SAEtCzD,IAAMC,IACT,8FAAAT,OACYb,EAAKgC,MAAMsD,MAAMC,OAAOC,GADpC,YAAA3E,OACiD6C,MAEpDnC,KAAK,SAAAC,GACFxB,EAAKe,SAAS,CAAC8B,MAAOrB,EAAIC,KAAKC,QAAQC,KAAKkB,UAE/CjB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KAfV,wBAAAsD,EAAAM,SAAAT,8EAmBX,IAAAU,EACqBxF,KAAKb,MAAvBwD,EADH6C,EACG7C,MAAOiC,EADVY,EACUZ,OAEf,OADAhD,QAAQC,IAAI,QAASc,QACRQ,IAAVR,QACYQ,IAAXyB,GAC8B,IAA9BtF,OAAOmG,KAAK9C,GAAOxC,QACY,IAA/Bb,OAAOmG,KAAKb,GAAQzE,OACbxB,EAAAC,EAAAC,cAACqD,EAAD,MAGHvD,EAAAC,EAAAC,cAACF,EAAAC,EAAMwE,SAAP,KACIzE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMC,GAAG,IAAIlE,UAAU,4BAAvB,WACAH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACT6D,EAAME,WADX,MAC0B,IACtBlE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkB6D,EAAMC,cAE5CjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAa8F,EAAOc,gBAKzC/G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,0BADJ,KACgC8D,EAAMgD,UAEtChH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,4BADA,KAC8B,GAC7B8D,EAAMiD,eAAeC,iBAAiBxC,IAAI,SAAC9B,GACxC,OAAQ5C,EAAAC,EAAAC,cAAA,KAAGmC,IAAK2B,EAAMM,UAAW1B,EAAKuE,YAAYC,qBAMtDpH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,gCADJ,KACyD,IAAnB8D,EAAMqD,SAAiB,KAAO,OAEpErH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,8BADJ,KACoC,IAChCF,EAAAC,EAAAC,cAACoH,EAAArH,EAAD,CAAQsH,OAAO,cAAcvD,EAAMwD,8BAlE9CnE,aCqBNoE,EApBf,SAAAxG,GAAA,SAAAwG,IAAA,OAAA9G,OAAAS,EAAA,EAAAT,CAAAU,KAAAoG,GAAA9G,OAAAiB,EAAA,EAAAjB,CAAAU,KAAAV,OAAAkB,EAAA,EAAAlB,CAAA8G,GAAA1F,MAAAV,KAAAE,YAAA,OAAAZ,OAAAwB,EAAA,EAAAxB,CAAA8G,EAAAxG,GAAAN,OAAAyB,EAAA,EAAAzB,CAAA8G,EAAA,EAAApF,IAAA,SAAAC,MAAA,WAEI,OACEtC,EAAAC,EAAAC,cAACwH,EAAD,KACE1H,EAAAC,EAAAC,cAACkE,EAAA,EAAD,KACEpE,EAAAC,EAAAC,cAACF,EAAAC,EAAMwE,SAAP,KACEzE,EAAAC,EAAAC,cAACyH,EAAD,MACA3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,KACI5H,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlC,IACjC7F,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAW/B,aAVnEyB,EAAA,CAAyBpE,aCGL2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1B,MACvB,6ECTN2B,IAASC,OAAOrI,EAAAC,EAAAC,cAACoI,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjG,KAAK,SAAAkG,GACjCA,EAAaC","file":"static/js/main.2f146f17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spin.cecae62e.gif\";","import React from 'react'\r\n\r\nconst NavBar = () => {\r\n    return (\r\n            <nav className=\"navbar navbar-doNotTrack bg-doNotTrack mb-5\">\r\n                <span className=\"navbar-brand mb-0 h1 mx-auto\">Lyrics Finder</span>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst APP_KEY = 'f4de7cde344132a63f26522e8f5c9ddf'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'SEARCH_TRACKS':\r\n        return {\r\n            ...state,\r\n            track_list: action.payload,\r\n            heading: 'Search Results'\r\n        };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        track_list: [],\r\n        heading: 'Top 10 Tracks',\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n     componentDidMount() {\r\n         axios.get(\r\n                `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=in&f_has_lyrics=1`+\r\n                `&apikey=${APP_KEY}`)\r\n            .then(res => {//console.log(res.data);\r\n            this.setState({track_list: res.data.message.body.track_list});\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer\r\n","import React from 'react';\r\nimport spinner from './spin.gif';\r\n\r\nexport default () =>  {\r\n    return (\r\n        <div>\r\n            <img \r\n                src={spinner}\r\n                alt=\"Loading...\"\r\n                style={{ width: '200px', margin: '40px auto', display:'block'}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Track = (props) => {\r\n    const { track } = props;\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <div className=\"card mb4 shadow-sm\">\r\n                <div className=\"card-body\">\r\n                    <h5>{track.artist_name}</h5>\r\n                    <p className=\"card-text\">\r\n                        <strong><i className=\"fas fa-play\"></i>Track</strong>\r\n                        : {track.track_name}\r\n                    <br/>\r\n                        <strong><i className=\"fas fa-compact-disc\"></i>Album</strong>\r\n                        : {track.album_name}\r\n                    </p>\r\n                    <Link to={ `lyrics/track/${track.track_id}`} className=\"btn btn-default btn-block\">\r\n                        <i className=\"fas fa-chevron-right\"></i> View Lyrics\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Track","import React, { Component } from 'react'\r\nimport { Consumer } from '../context'\r\nimport Spinner from '../components/Spinner'\r\nimport Track from './Track'\r\n\r\nclass Tracks extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const { track_list, heading } = value;\r\n\r\n                        if(track_list === undefined || track_list.length === 0) {\r\n                            return <Spinner/>\r\n                        } else {\r\n                            // console.log(value);\r\n                            return (\r\n                                <React.Fragment>\r\n                                    <h3 className=\"text-center mb-4\">{heading}</h3>\r\n                                    <div className=\"row\">\r\n                                            {\r\n                                                track_list.map(item => (\r\n                                                    <Track key={item.track.track_id} track={item.track}/>\r\n                                                ))\r\n                                            }\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            );\r\n                        }\r\n                        \r\n                    }\r\n                }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tracks\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { Consumer } from '../context'\r\nimport {MDBBtn} from 'mdbreact'\r\n\r\nconst APP_KEY = process.env.REACT_APP_LYRICS_KEY\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        trackTitle: ''\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.name]:  e.target.value});\r\n    }\r\n\r\n    findTrack = (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        axios.get(\r\n            `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?track=${this.state.trackTitle}`+\r\n            `&page_size=10&page=1&s_track_rating=desc&apikey=${APP_KEY}`)\r\n        .then(res => {\r\n        dispatch({\r\n            type: 'SEARCH_TRACKS',\r\n            payload: res.data.message.body.track_list\r\n        })\r\n        //this.setState({track_list: res.data.message.body.track_list});\r\n    })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                    {\r\n                        value => {\r\n                            const { dispatch } = value;\r\n                            return (\r\n                                <div className=\"card card-body mb-4 p-4\">\r\n                                    <h1 className=\"display-5 text-center\"><i className=\"fas fa-music\"></i>{' '}\r\n                                        Search for a Song...\r\n                                    </h1>\r\n                                    <p className=\"lead text-center\">Get the Lyrics</p>\r\n                                    <form onSubmit={this.findTrack.bind(this, dispatch)}>\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"text\" className=\"form-control form-control-lg\" \r\n                                            placeholder=\"Song tilte...\"\r\n                                            name=\"trackTitle\"\r\n                                            value={this.state.trackTitle}\r\n                                            onChange={this.onChange}/>\r\n                                        </div>\r\n                                        <MDBBtn color=\"primary\" className=\"btn btn-lg btn-block\"\r\n                                        type=\"submit\">\r\n                                            Get Track Lyrics\r\n                                        </MDBBtn>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport Tracks from './Tracks'\r\nimport Search from '../components/Search'\r\n\r\nconst Index = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Search/>\r\n            <Tracks/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport Spinner from '../components/Spinner'\r\nimport {Link} from 'react-router-dom'  \r\nimport Moment from 'react-moment'\r\n\r\nconst APP_KEY = 'f4de7cde344132a63f26522e8f5c9ddf'\r\n\r\nclass Lyrics extends Component {\r\n    state = {\r\n        track: {},\r\n        lyrics: {}\r\n    };\r\n    componentDidMount = async () => {\r\n        await axios.get(\r\n            `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.lyrics.get?` + \r\n            `track_id=${this.props.match.params.id}&apikey=${APP_KEY}`)\r\n        .then(res => {\r\n            // console.log('Lyrics', res.data);\r\n        this.setState({lyrics: res.data.message.body.lyrics});\r\n \r\n        return axios.get(\r\n            `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.get?` + \r\n            `track_id=${this.props.match.params.id}&apikey=${APP_KEY}`)\r\n    })\r\n        .then(res => {\r\n            this.setState({track: res.data.message.body.track});\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    // track.get?commontrack_id=5920049\r\n    render() {\r\n        const { track, lyrics } = this.state;\r\n        console.log('Track', track)\r\n        if(track === undefined ||\r\n            lyrics === undefined ||\r\n            Object.keys(track).length === 0 ||\r\n            Object.keys(lyrics).length === 0) {\r\n            return <Spinner/>\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">Go Back</Link>\r\n                    <div>\r\n                        <div className=\"card\">\r\n                            <h5 className=\"card-header\">\r\n                                {track.track_name} by{' '}  \r\n                                <span className=\"text-secondary\">{track.artist_name}</span>\r\n                            </h5>\r\n                            <div className=\"card-body\">\r\n                                <p className=\"card-text\">{lyrics.lyrics_body}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                        <ul className=\"list-group mt-3\">\r\n                            <li className=\"list-group-item\">\r\n                                <strong>Album ID</strong>: {track.album_id}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                            <strong>Song Genre</strong>: {''} \r\n                            {track.primary_genres.music_genre_list.map((data) => {\r\n                                return (<p key={track.track_id}>{data.music_genre.music_genre_name}</p>)\r\n                            })}\r\n                            {/* {track.h5rimary_genres.music_genre_list.length === 0 ?\r\n                                 \"No Genre\" : track.primary_genres.music_genre_list[0].music_genre.music_genre_name}  */}\r\n                                {/*track.primary_genres.music_genre_list[0].music_genre.music_genre_name*/} \r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <strong>Explicit Words</strong>: {track.explicit === 0 ? 'No' : 'Yes'}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <strong>Release Date</strong>: {' '}\r\n                                <Moment format=\"DD-MM-YYYY\">{track.first_release_date}</Moment>\r\n                            </li>\r\n                        </ul>\r\n\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Lyrics\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom' \nimport NavBar from './components/NavBar'\nimport Index from './components/Index'\nimport {Provider} from '../src/context'\nimport Lyrics from './components/Lyrics'\n\n\nexport class App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <React.Fragment>\n            <NavBar/>\n            <div className=\"container\">\n              <Switch>\n                  <Route exact path=\"/\" component={Index} />\n                  <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n              </Switch>\n            </div>\n          </React.Fragment> \n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}